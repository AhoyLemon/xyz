mixin timeStamp(t)
  - var d
  if t
    - d = new Date(t)
  else
    - d = new Date()


  - var m = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ]
  time 
    = m[d.getMonth()] 
    |  
    = d.getDate()
    | , 
    = d.getFullYear() 
  //- var lastUpdated = d.getFullYear() + '-' + (d.getMonth()<10?'0':'') + d.getMonth() + '-' + (d.getDate()<10?'0':'') + d.getDate() + '@' + (d.getHours()<10?'0':'') + d.getHours() + ':' + (d.getMinutes()<10?'0':'') + d.getMinutes() + ':' + (d.getSeconds()<10?'0':'') + d.getSeconds()  


mixin formatDate(e, f)
  if !e
    - var x = new Date()
    - var e = x.getFullYear() + '-' + (x.getMonth()<10?'0':'') + x.getMonth() + '-' + (x.getDate()<10?'0':'') + x.getDate()
  - var allMonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ]
  - var MonthAbbr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ]
  - var g = e.split("-");
  if f == "m d"
    time
      = MonthAbbr[parseInt(g[1] - 1)]
      |  
      = g[2]
  else
    time
      = MonthAbbr[parseInt(g[1] - 1)]
      |  
      = g[2]
      | , 
      = g[0]


mixin dateRange(e,f)
  - var allMonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ]
  - var MonthAbbr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ]
  - var g = e.split("-");
  - var h = f.split("-");

  if (g[1] == h[1])
    time
      = MonthAbbr[parseInt(g[1] - 1)]
      |  
      = g[2]
      |  -  
      = h[2]
      | ,  
      = h[0]
  else
    time
      = MonthAbbr[parseInt(g[1] - 1)]
      |  
      = g[2]
      |  -  
      = MonthAbbr[parseInt(h[1] - 1)]
      |  
      = h[2]
      | ,  
      = h[0]
      


mixin link(title,url)
  a(href=url target="_blank" nofollow noopener)= title

mixin card(title, url, background, logo, launched)
  figure.card
    a.flipper(href=url)
      - var styl
      if background.includes('#')
        - styl = "background-color:" + background
      else if background.includes('.jpg')
        - styl = "background-image:url(img/"+background+")"
      .front(style=styl)
        if logo.includes('svg')
          img.logo(src="svg/"+logo alt=title+" logo")
        else
          img.logo(src="img/"+logo alt=title+" logo")
      .back
        h3.title= title
        block

mixin prevTalk(title,img,d,city)
  .talk
    figure(style="background-image:url(img/talks/"+img+")")
    figcaption
      .conference #{title}
      time #{d}
      .city #{city}

mixin talkSlider(w)
  if w == "upcoming"
    .upcoming-conferences.conferences
      .slider-header
        h2 
          | UPCOMING TALKS 
          sub (#{upcomingTalks.length})
        .more-holder
          a(href="talks.html") see all
      .upcoming-conference-carousel.carousel
        each t,index in upcomingTalks
          .conference.upcoming
            .name
              a(href=t.url target="_blank")= t.name
            .location
              if t.online
                span Online Conference
              else if t.city && t.state
                span #{t.city}, #{t.state}
              else if t.city && t.country
                span #{t.city}, #{t.country}
            .date
              // Date
              if t.postponed
                strong POSTPONED
              else if t.startDate && t.endDate
                +dateRange(t.startDate, t.endDate)
              else if t.date
                .date(itemprop="startDate" content=t.date)
                  +formatDate(t.date)
                //-meta(itemprop="endDate" content=t.date)


            .presenting Presenting:
            if t.talks
              ul.multiple-talks
                each u,uindex in t.talks
                  li.talk= u
            else if t.talk
              ul
                li.talk= t.talk

        if upcomingTalks.length == 1
          .conference.upcoming(style="display:flex; align-items:center; justify-content:center;")
            p(style="font-size:120%")
              a(href="https://sessionize.com/lemon") Invite me to speak
              | , please.

  else if w == 'previous'
    .previous-conferences.conferences
      .slider-header
        h2 
          | PREVIOUS TALKS 
          sub (#{previousTalks.length})
        .more-holder
          a(href="talks.html#previous") see all
      .previous-conference-carousel.carousel
        each t,index in previousTalks
          - let p = ""
          if t.pics
            - p = "img/talks/" + t.pics[0]
          else if t.img
            - p = "img/talks/" + t.img
          figure.conference.prev(style="background-image:url("+p+")")
            figcaption
              .name
                a(href=t.url target="_blank")= t.name
              .location
                if t.city && t.state
                  span #{t.city}, #{t.state}
                else if t.city && t.country
                  span #{t.city}, #{t.country}
              .date
                if t.startDate && t.endDate
                  .date
                    span(itemprop="startDate" content=t.startDate)
                      +formatDate(t.startDate, "m d")
                    | - 
                    span(itemprop="endDate" content=t.endDate)
                      +formatDate(t.endDate)
                else if t.date
                  .date(itemprop="startDate" content=t.date)
                    +formatDate(t.date)

mixin projectSummary(s)
  - let bgStyle = ""
  - let fgImage = ""
  - let bgiFile = ""
  if s.bgColor
    - bgStyle = "background-color:" + s.bgColor +"; "
  else if s.bgImage
    if s.bgImage.includes("svg")
      - bgiFile = "svg/"+s.bgImage
    else if s.bgImage
      - bgiFile = "img/"+s.bgImage
    - bgStyle = "background-image:url("+bgiFile+"); "
  else if s.bgGradient
    - bgStyle = "background:"+s.bgGradient+"; "

  if s.fgImage
    if s.fgImage.includes("svg")
      - fgImage = "svg/"+s.fgImage
    else if s.fgImage
      - fgImage = "img/"+s.fgImage

  .project(repo=s.repo)
    figure(style=bgStyle)
      if fgImage != ""
        a(href=s.url)
          img.logo(src=fgImage alt=s.title+" logo")
      else if s.bgImage
        a.absolute-link(href=s.url style=bgStyle)
          //-img.logo(src=bgiFile)
    figcaption
      .title
        a(href=s.url)= s.title
      if (s.subhead)
        .subhead= s.subhead
      else if (s.type)
        .type= s.type

      .description !{s.description}

    .detail-row
      //-if (s.type)
        .detail
          .label &nbsp;
          .value= s.type
      if (s.launched)
        .detail.launched
          .label LAUNCHED
          .value
            +formatDate(s.launched)
      if s.repo
        .detail.last-updated.invisible
          .label LAST UPDATED
          .value
      if (s.retired)
        .detail.retired
          .label RETIRED
          .value
            +formatDate(s.retired)
      if s.repo
        .detail.repository
          .label REPOSITORY
          .value
            //-a(href="https://github.com/"+s.repo)
              svg(viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
                title GitHub icon
                path(d='M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12')
            a(href="https://github.com/"+s.repo target="_blank")
              span= s.repo.split('/')[1]
              


    
    if s.repo
      script.
        //#{s.repo}
        $.getJSON( "https://api.github.com/repos/#{s.repo}/commits", function( data ) {
          var items = [];
          let timeStamp = data[0].commit.author.date;
          let lU = timeStamp.split('T');
          let lastUpdated = lU[0];
          console.log(lastUpdated);
          $('.project[repo="#{s.repo}"] .last-updated .value').html(formatDate(lastUpdated));
          $('.project[repo="#{s.repo}"] .last-updated .value').removeClass('invisible');
        });
