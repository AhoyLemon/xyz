- const testing = true

- let siteURL = "https://ahoylemon.xyz"
if testing
  - siteURL = "http://localhost:3000"
- const siteTitle = "ahoylemon üçã xyz"
- const emailAddress = "lemon@ahoylemon.xyz"
- const twitterHandle = "@AhoyLemon"
- const d = new Date()
- const lastUpdated = d.toISOString()
- const talkPage = "talks.html"
- const talkPageURL = siteURL + "/" + talkPage
- let description = "I make a lot of stuff, including this website to show the stuff I make."

include _sites.pug
include _talks.pug
include _decks.pug


- let talkNumber = 0

-
  upcomingTalks.forEach(function(t) {
    let slug = "";
    if (t.name && t.startDate) {
      slug = t.name + t.startDate;
    } else if (t.name && t.date) {
      slug = t.name + t.date;
    } else if (t.name) {
      slug = t.name
    } else {
      slug = "talk"+talkNumber
    }
    slug = slug.replace(/[^a-z0-9]/gi, '');
    t.slug = slug;
    talkNumber++
  });

-
  previousTalks.forEach(function(t) {
    let slug = "";
    if (t.name && t.startDate) {
      slug = t.name + t.startDate;
    } else if (t.name && t.date) {
      slug = t.name + t.date;
    } else if (t.name) {
      slug = t.name
    } else {
      slug = "talk"+talkNumber
    }
    slug = slug.replace(/[^a-z0-9]/gi, '');
    t.slug = slug;
    talkNumber++
  });

- const countryCounts = {};
- const countryFlags = {};
-
  previousTalks.forEach(function(t) {
    let country = t.country;

    if (t.flag === "us") {
      country = "United States";
    }
    if (t.online) {
      country = "Virtual";
    }

    if (country) {
      countryCounts[country] = (countryCounts[country] || 0) + 1;
      if (!countryFlags[country] && !t.online) {
        countryFlags[country] = t.flag; // Store the flag for the country
      }
    }
  });

- const sortedCountryCounts = [];
-
  Object.entries(countryCounts).sort(function(a, b) {
    if (a[0] === "Virtual") return 1; // Place "Virtual" at the end
    if (b[0] === "Virtual") return -1; // Place "Virtual" at the end
    if (b[1] !== a[1]) {
      return b[1] - a[1]; // Sort by count in descending order
    }
    return a[0].localeCompare(b[0]); // Sort alphabetically by country name for ties
  }).forEach(function([country, count]) {
    sortedCountryCounts.push({ 
      country, 
      count, 
      flag: country === "Virtual" ? "virtual-talk" : countryFlags[country] // Use "virtual-talk" for Virtual
    });
  });

-
  myDecks.forEach(function(d) {
    d.history = [];

    upcomingTalks.forEach(function(c) {

      let foundMatch = false;
      let talkVideo = null;
      let isThisKeynote = false;


      if (c.talks) {
        c.talks.forEach(function(t) {
          if (t == d.title) {
            foundMatch = true;
          } else if (t.name && t.name == d.title) {
            foundMatch = true;
            if (t.video) {
              talkVideo = t.video
            }
            if (t.keynote) {
              isThisKeynote = true;
            }
          } else if (d.alias && d.alias.includes(t)) {
            foundMatch = true;
          } else if (d.alias && d.alias.includes(t.name)) {
            foundMatch = true;
            if (t.video) {
              talkVideo = t.video
            }
            if (t.keynote) {
              isThisKeynote = true;
            }
          }
        }); 
      } else if (c.talk) {
        if (c.talk == d.title ) {
          foundMatch = true;
        }
      }

      if (foundMatch) {
        let newHistory = {
          name: c.name,
          startDate: c.startDate,
          endDate: c.endDate,
          date: c.date,
          online: c.online,
          flag: c.flag
        }
        if (talkVideo) {
          newHistory.video = talkVideo;
        }
        if (isThisKeynote) {
          newHistory.keynote = true;
        }
        d.history.push(newHistory);
      }
    });



    previousTalks.forEach(function(c) {

      let foundMatch = false;
      let talkVideo = null;
      let isThisKeynote = false;

      if (c.talks) {
        c.talks.forEach(function(t) {
        if (t == d.title) {
          foundMatch = true;
        } else if (t.name && t.name == d.title) {
          foundMatch = true;
          if (t.video) {
            talkVideo = t.video
          }
          if (t.keynote) {
            isThisKeynote = true;
          }

        } else if (d.alias && d.alias.includes(t)) {
          foundMatch = true;
        } else if (d.alias && d.alias.includes(t.name)) {
          foundMatch = true;
          if (t.video) {
            talkVideo = t.video
          }
          if (t.keynote) {
            isThisKeynote = true;
          }
        }
      }); 
      } else if (c.talk) {
        if (c.talk == d.title ) {
          foundMatch = true;
        }
      }

      if (foundMatch) {
        let newHistory = {
          name: c.name,
          startDate: c.startDate,
          endDate: c.endDate,
          date: c.date,
          online: c.online,
          flag: c.flag
        }
        if (talkVideo) {
          newHistory.video = talkVideo;
        }
        if (isThisKeynote) {
          newHistory.keynote = true;
        }
        d.history.push(newHistory);
      }
    });


  });

include _subpages.pug